;; Analyzed by ClojureScript 1.7.170
{:use-macros {html sablono.core, dom-node devcards.core, defcard devcards.core, defcard-doc devcards.core}, :excludes #{}, :name cljs-demo.js-and-html, :imports nil, :requires {dc devcards.core, devcards.core devcards.core, html sablono.core, sablono.core sablono.core}, :uses nil, :defs {html-using-innerhtml {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :line 12, :column 7, :end-line 12, :end-column 27, :arglists (quote ([el]))}, :name cljs-demo.js-and-html/html-using-innerhtml, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :end-column 27, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, on-click {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :line 35, :column 7, :end-line 35, :end-column 15, :arglists (quote ([e]))}, :name cljs-demo.js-and-html/on-click, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :end-column 15, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, create-button {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :line 39, :column 7, :end-line 39, :end-column 20, :arglists (quote ([]))}, :name cljs-demo.js-and-html/create-button, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, insert-button {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :line 52, :column 7, :end-line 52, :end-column 20, :arglists (quote ([div]))}, :name cljs-demo.js-and-html/insert-button, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :end-column 20, :method-params ([div]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([div]))}, html-using-createElement {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :line 56, :column 7, :end-line 56, :end-column 31, :arglists (quote ([el]))}, :name cljs-demo.js-and-html/html-using-createElement, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :end-column 31, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, table-using-hiccup {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :line 80, :column 7, :end-line 80, :end-column 25, :arglists (quote ([n-rows]))}, :name cljs-demo.js-and-html/table-using-hiccup, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :end-column 25, :method-params ([n-rows]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n-rows]))}, attrs-using-hiccup {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :line 89, :column 7, :end-line 89, :end-column 25, :arglists (quote ([]))}, :name cljs-demo.js-and-html/attrs-using-hiccup, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/js_and_html.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {dc devcards.core, devcards.core devcards.core, html sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:thead :path :tbody :table :key :func :name :td :th :tr :width :background :div.example-class :documentation :style :card :cljs_demo.js_and_html :main-obj :initial-data :options :rendering-html-hiccup :rendering-html-createElement :onClick :rendering-html-innerhtml :height :heading :hide-border}, :order [:path :func :cljs_demo.js_and_html :card :name :documentation :main-obj :initial-data :options :heading :hide-border :rendering-html-innerhtml :rendering-html-createElement :table :thead :tr :th :tbody :key :td :div.example-class :style :onClick :background :width :height :rendering-html-hiccup]}, :doc nil}