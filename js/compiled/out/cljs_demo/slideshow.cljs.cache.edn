;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name cljs-demo.slideshow, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :uses nil, :defs {btn-container-class {:name cljs-demo.slideshow/btn-container-class, :file "src/cljs_demo/slideshow.cljs", :line 8, :column 1, :end-line 8, :end-column 35, :private true, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 8, :column 16, :end-line 8, :end-column 35, :private true}}, swap-active-class! {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 29, :column 8, :end-line 29, :end-column 26, :private true, :arglists (quote ([from to]))}, :private true, :name cljs-demo.slideshow/swap-active-class!, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 26, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to]))}, on-key-down {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 55, :column 7, :end-line 55, :end-column 18, :arglists (quote ([e]))}, :name cljs-demo.slideshow/on-key-down, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, container-class {:name cljs-demo.slideshow/container-class, :file "src/cljs_demo/slideshow.cljs", :line 5, :column 1, :end-line 5, :end-column 31, :private true, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 5, :column 16, :end-line 5, :end-column 31, :private true}}, remove-class {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 16, :column 8, :end-line 16, :end-column 20, :private true, :arglists (quote ([el class]))}, :private true, :name cljs-demo.slideshow/remove-class, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 20, :method-params ([el class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el class]))}, insert-buttons {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 98, :column 8, :end-line 98, :end-column 22, :private true, :arglists (quote ([]))}, :private true, :name cljs-demo.slideshow/insert-buttons, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ___ {:name cljs-demo.slideshow/___, :file "src/cljs_demo/slideshow.cljs", :line 105, :column 1, :end-line 105, :end-column 13, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 105, :column 10, :end-line 105, :end-column 13}}, buttons {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 78, :column 7, :end-line 78, :end-column 14, :arglists (quote ([]))}, :name cljs-demo.slideshow/buttons, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-slideshow! {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 47, :column 8, :end-line 47, :end-column 24, :private true, :arglists (quote ([]))}, :private true, :name cljs-demo.slideshow/start-slideshow!, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-hash {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 12, :column 8, :end-line 12, :end-column 16, :private true, :arglists (quote ([]))}, :private true, :name cljs-demo.slideshow/get-hash, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop-slideshow! {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 51, :column 8, :end-line 51, :end-column 23, :private true, :arglists (quote ([]))}, :private true, :name cljs-demo.slideshow/stop-slideshow!, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, state {:name cljs-demo.slideshow/state, :file "src/cljs_demo/slideshow.cljs", :line 10, :column 1, :end-line 10, :end-column 25, :private true, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 10, :column 20, :end-line 10, :end-column 25, :private true}}, swap-slide! {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 38, :column 8, :end-line 38, :end-column 19, :private true, :arglists (quote ([n-or-f]))}, :private true, :name cljs-demo.slideshow/swap-slide!, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 19, :method-params ([n-or-f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n-or-f]))}, count-slides {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 26, :column 7, :end-line 26, :end-column 19, :arglists (quote ([]))}, :name cljs-demo.slideshow/count-slides, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, active-slide-class {:name cljs-demo.slideshow/active-slide-class, :file "src/cljs_demo/slideshow.cljs", :line 4, :column 1, :end-line 4, :end-column 34, :private true, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 4, :column 16, :end-line 4, :end-column 34, :private true}}, get-by-class {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 19, :column 8, :end-line 19, :end-column 20, :private true, :arglists (quote ([class]))}, :private true, :name cljs-demo.slideshow/get-by-class, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 20, :method-params ([class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class]))}, add-class {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 14, :column 8, :end-line 14, :end-column 17, :private true, :arglists (quote ([el class]))}, :private true, :name cljs-demo.slideshow/add-class, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 17, :method-params ([el class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el class]))}, container {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([]))}, :name cljs-demo.slideshow/container, :variadic false, :file "src/cljs_demo/slideshow.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, slideshow-class {:name cljs-demo.slideshow/slideshow-class, :file "src/cljs_demo/slideshow.cljs", :line 7, :column 1, :end-line 7, :end-column 31, :private true, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 7, :column 16, :end-line 7, :end-column 31, :private true}}, devcard-class {:name cljs-demo.slideshow/devcard-class, :file "src/cljs_demo/slideshow.cljs", :line 6, :column 1, :end-line 6, :end-column 29, :private true, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/slideshow.cljs", :line 6, :column 16, :end-line 6, :end-column 29, :private true}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:n :a.com-rigsomelight-devcards-slideshow-btn :on-click :style :div.com-rigsomelight-devcards-slideshow-btns :display :on :href}, :order [:on :n :div.com-rigsomelight-devcards-slideshow-btns :a.com-rigsomelight-devcards-slideshow-btn :href :on-click :style :display]}, :doc nil}