;; Analyzed by ClojureScript 1.7.170
{:use-macros {defcard-om devcards.core, defcard devcards.core, defcard-doc devcards.core}, :excludes #{}, :name cljs-demo.react, :imports nil, :requires {reagent reagent.core, edn-rend devcards.util.edn-renderer, devcards.core devcards.core, dom om.dom, reagent.core reagent.core, om.dom om.dom, dc devcards.core, sablono.core sablono.core, devcards.util.edn-renderer devcards.util.edn-renderer, sab sablono.core, om.core om.core, om om.core}, :uses nil, :defs {om-counter-inc {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :line 111, :column 7, :end-line 111, :end-column 21, :arglists (quote ([data owner]))}, :name cljs-demo.react/om-counter-inc, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :end-column 21, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t_cljs_demo$react17143 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([counter data owner meta17144])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/->t_cljs_demo$react17143, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :method-params ([counter data owner meta17144]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 104, :max-fixed-arity 4, :fn-var true, :arglists (quote ([counter data owner meta17144])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs_demo$react17147 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/t_cljs_demo$react17147, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :type true, :anonymous true, :column 3, :line 104, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs_demo$react17140 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([om-widget-dom data owner meta17141])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/->t_cljs_demo$react17140, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :method-params ([om-widget-dom data owner meta17141]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 80, :max-fixed-arity 4, :fn-var true, :arglists (quote ([om-widget-dom data owner meta17141])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs_demo$react17128 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cljs-demo.react/t_cljs_demo$react17128, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :type true, :anonymous true, :column 3, :line 57, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs_demo$react17143 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/t_cljs_demo$react17143, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :type true, :anonymous true, :column 3, :line 104, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, om-widget-dom {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :line 79, :column 7, :end-line 79, :end-column 20, :arglists (quote ([data owner]))}, :name cljs-demo.react/om-widget-dom, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :end-column 20, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, t_cljs_demo$react17131 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/t_cljs_demo$react17131, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :type true, :anonymous true, :column 3, :line 77, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, reagent-edit-state-component {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :line 30, :column 7, :end-line 30, :end-column 35, :arglists (quote ([state-atom]))}, :name cljs-demo.react/reagent-edit-state-component, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :end-column 35, :method-params ([state-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state-atom]))}, ->t_cljs_demo$react17134 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([om-widget-sablono data owner meta17135])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/->t_cljs_demo$react17134, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :method-params ([om-widget-sablono data owner meta17135]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 77, :max-fixed-arity 4, :fn-var true, :arglists (quote ([om-widget-sablono data owner meta17135])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, om-widget-sablono {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :line 76, :column 7, :end-line 76, :end-column 24, :arglists (quote ([data owner]))}, :name cljs-demo.react/om-widget-sablono, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :end-column 24, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t_cljs_demo$react17128 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta17129])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cljs-demo.react/->t_cljs_demo$react17128, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :method-params ([meta17129]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta17129])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs_demo$react17131 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([om-widget-sablono data owner meta17132])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/->t_cljs_demo$react17131, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :method-params ([om-widget-sablono data owner meta17132]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 77, :max-fixed-arity 4, :fn-var true, :arglists (quote ([om-widget-sablono data owner meta17132])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs_demo$react17137 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([om-widget-dom data owner meta17138])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/->t_cljs_demo$react17137, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :method-params ([om-widget-dom data owner meta17138]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 80, :max-fixed-arity 4, :fn-var true, :arglists (quote ([om-widget-dom data owner meta17138])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs_demo$react17137 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/t_cljs_demo$react17137, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :type true, :anonymous true, :column 3, :line 80, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, om-test-atom {:name cljs-demo.react/om-test-atom, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :line 99, :column 1, :end-line 99, :end-column 22, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :line 99, :column 10, :end-line 99, :end-column 22}}, ->t_cljs_demo$react17151 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta17152])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cljs-demo.react/->t_cljs_demo$react17151, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :method-params ([meta17152]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta17152])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, counter {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :line 101, :column 7, :end-line 101, :end-column 14, :arglists (quote ([data owner]))}, :name cljs-demo.react/counter, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :end-column 14, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, reagent-input-component {:protocol-inline nil, :meta {:file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :line 20, :column 7, :end-line 20, :end-column 30, :arglists (quote ([key state-atom])), :doc "Create an <input> component, saving data in state-atom at key"}, :name cljs-demo.react/reagent-input-component, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :end-column 30, :method-params ([key state-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key state-atom])), :doc "Create an <input> component, saving data in state-atom at key"}, t_cljs_demo$react17151 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name cljs-demo.react/t_cljs_demo$react17151, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :type true, :anonymous true, :column 1, :line 121, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs_demo$react17134 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/t_cljs_demo$react17134, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :type true, :anonymous true, :column 3, :line 77, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_cljs_demo$react17147 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([counter data owner meta17148])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/->t_cljs_demo$react17147, :variadic false, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :method-params ([counter data owner meta17148]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 104, :max-fixed-arity 4, :fn-var true, :arglists (quote ([counter data owner meta17148])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_cljs_demo$react17140 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name cljs-demo.react/t_cljs_demo$react17140, :file "/Users/jon/dev/talks/cljs-for-js-devs/src/cljs_demo/react.cljs", :type true, :anonymous true, :column 3, :line 80, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {dc devcards.core, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:path owner data :func :name :value :margin-top :hello :type om-widget-dom :omcard-state-mgmt :title :documentation meta17152 :style :div.input-wrap meta17132 :div :card meta17138 om-widget-sablono :main-obj meta17144 meta17135 :cljs_demo.react :watch-atom :initial-data :label :count meta17129 :shared counter meta17141 :options :input :target quote :reagent-card :arglists :on-change meta17148 :heading :text :hide-border}, :order [:path :func :cljs_demo.react :card :name :documentation :main-obj :initial-data :options :heading :hide-border :div.input-wrap :label :input :type :on-change :value :div :hello :style :margin-top :reagent-card meta17129 :text om-widget-sablono :arglists quote data owner meta17132 meta17135 om-widget-dom meta17138 meta17141 :count :title counter meta17144 meta17148 :omcard-state-mgmt :shared :target :watch-atom meta17152]}, :doc nil}